name: Build

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read

jobs:
  build:
      name: Build
      runs-on: ubuntu-latest
      permissions:
        contents: write
        pull-requests: read
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            submodules: recursive
        - name: Setup Bun
          uses: oven-sh/setup-bun@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            bun-version: latest
        - run: |
            bun install --no-interactive
            export NODE_ENV=production
            bun build
        - name: setup UV
          uses: astral-sh/setup-uv@v5
          with:
            version: "latest"
            enable-cache: true
            cache-dependency-glob: |
              pyproject.toml
        - name: Add build packages
          run: |
            sudo apt-get update
            sudo apt-get install -y build-essential libcairo2 libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev &&
            chmod +x bin/*
            bin/setup-repo.sh
        - name: Configure Git Credentials
          run: |
            git config user.name github-actions[bot]
            git config user.email "action@github.com"
        - name: Install dependencies
          run: |
            uv python install 3.13
            uv venv --allow-existing .venv
            source .venv/bin/activate
            uv sync --all-extras
        - name: Build MkDocs site
          run: |
            rm -rf site
            mkdocs build -d site
        - name: Upload built site
          uses: actions/upload-artifact@v4
          with:
            name: site
            path: site
        - name: Commit build
          run: |
            git add --all
            git commit -m "Build site"
            git push
  notify:
    needs: [build]
    if: failure()
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: write
    steps:
      - name: Create GitHub Issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Workflow failed: ${{ github.workflow }}',
              body: 'Workflow ${{ github.workflow }} failed on commit ${{ github.sha }}. Check the [workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.',
              labels: ['bug']
            })
