
// This file is auto-generated by the build script.
export interface HeroImage {
  imageName: string
  parent: string
  widths: {
    [key: number]: string
  }
  srcset: string
  src?: string
}

/**
 * Replaces the 'docs' part of the path with the current location's protocol and host
 * @param src the source path
 * @returns the updated path
 */
function replaceDocs(src: string): string {
  const protocol = location.protocol === 'http:' ? 'http:' : 'https:'
  const { host } = location
  return src.replace(/docs/g, `${protocol}//${host}`)
}

const rawHeroImages: HeroImage[] = [
  {
    "imageName": "anime",
    "parent": "anime",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "artbrut",
    "parent": "artbrut",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "comic",
    "parent": "comic",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "fanciful",
    "parent": "fanciful",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "fantasy",
    "parent": "fantasy",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "farcical",
    "parent": "farcical",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "fauvist",
    "parent": "fauvist",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "minimal",
    "parent": "minimal",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "mystical",
    "parent": "mystical",
    "widths": {},
    "srcset": ""
  },
  {
    "imageName": "surreal",
    "parent": "surreal",
    "widths": {},
    "srcset": ""
  }
] as const

export const heroImages = rawHeroImages.map(image => ({
  imageName: image.imageName,
  src: image.src ? replaceDocs(image.src) : undefined,
  widths: Object.fromEntries(Object.entries(image.widths).map(([key, value]) => [key, replaceDocs(value)])),
  srcset: replaceDocs(image.srcset),
  parent: replaceDocs(image.parent)
}))
